const w4 = @import("wasm4.zig");
const find = @import("std").mem.indexOfScalarPos;
const Controller = @import("Controller.zig");

pub const Progression = enum {
    welcome,
    collect_gem,
    built_workshop,
    built_spring,
    built_weavery,
    built_drill,
    progress_layer,
    progress_core,
};

const progressionData: []const []const u8 = &.{
    @embedFile("tutorial/welcome.txt"),
    @embedFile("tutorial/collect_gem.txt"),
    @embedFile("tutorial/built_workshop.txt"),
    @embedFile("tutorial/built_spring.txt"),
    @embedFile("tutorial/built_weavery.txt"),
    @embedFile("tutorial/built_drill.txt"),
    @embedFile("tutorial/progress_layer.txt"),
    @embedFile("tutorial/progress_core.txt"),
};

var currentProgress: Progression = .welcome;

pub fn progression_trigger(newprogress: Progression) void {
    const asi = @intFromEnum(newprogress);
    if (@intFromEnum(currentProgress) < asi) {
        currentProgress = newprogress;
        lineAnimation = 0;
        mline = 0;
        mreadingLine = progressionData[asi];
    }
}

pub fn force_read(line: []const u8) void {
    lineAnimation = 0;
    mline = 0;
    mreadingLine = line;
}

pub fn disable() void {
    currentProgress = .progress_layer;
    mreadingLine = null;
    mline = null;
}

var mline: ?usize = 0;
var mreadingLine: ?[]const u8 = progressionData[0];
var lineAnimation: u16 = 0;

fn jump(input: u16) u16 {
    if (input > 50) {
        return 0;
    } else {
        return input % 20 / 4;
    }
}

pub fn update_draw(controls: *Controller) bool {
    if (mline == null or mreadingLine == null) {
        return false;
    }

    lineAnimation += 1;

    // validated optionals
    const line = mline.?;
    const readingLine = mreadingLine.?;

    const mend = find(u8, readingLine, line + 1, '\n');
    const string = readingLine[line .. mend orelse readingLine.len];

    w4.DRAW_COLORS.* = 0x4230;
    w4.blit(&freddy, 100, 82, freddy_width, freddy_height, freddy_flags);
    w4.DRAW_COLORS.* = 0x14;
    const animJump = jump(lineAnimation);

    if (find(u8, string, 0, '\\')) |max| {
        w4.text(string[0..max], 0, 120 - animJump);
        w4.text(string[max + 1 ..], 0, 129 - animJump);
    } else {
        w4.text(string, 0, 120 - animJump);
    }

    if (controls.released.x or controls.released.y) {
        lineAnimation = 0;
        if (mend) |end| {
            if (end == readingLine.len - 1) { // \n eof
                mline = null;
                mreadingLine = null;
                controls.released.y = false; // eat continue inputs
                controls.released.x = false;
                return false;
            }
            mline = end + 1;
            return true;
        } else { // no \n eof
            mline = null;
            mreadingLine = null;
            controls.released.y = false;
            controls.released.x = false;
            return false;
        }
    }

    return true;
}

// freddy_the_worm_from_the_game_freddy_krueger_digdug
const freddy_width = 60;
const freddy_height = 80;
const freddy_flags = 1; // BLIT_2BPP
const freddy = [1200]u8{ 0x00, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5a, 0xaa, 0xaa, 0xff, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xaa, 0xaa, 0xab, 0xaa, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0xaa, 0xaa, 0xaa, 0xaa, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0xaa, 0xaa, 0xaa, 0xaa, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xab, 0xea, 0xaa, 0xaa, 0xa5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xab, 0xfe, 0xaa, 0xaa, 0xaa, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xaa, 0xbf, 0xaa, 0xaa, 0xaf, 0xe9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xaa, 0xbd, 0xaa, 0x9a, 0xaf, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xaa, 0xbe, 0xaa, 0x9a, 0xad, 0xaa, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0xaa, 0xaa, 0xaa, 0xa6, 0xaa, 0xaa, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0xaa, 0xaa, 0xaa, 0xa6, 0xaa, 0xaa, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xaa, 0xaa, 0xaa, 0xa9, 0xaa, 0xaa, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xaa, 0xaa, 0xaa, 0xa9, 0xaa, 0xaa, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xaa, 0xaa, 0xaa, 0xaa, 0x6a, 0xaa, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x9a, 0xaa, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0xaa, 0xaa, 0xaa, 0xaf, 0xfa, 0xaa, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x5a, 0xaa, 0xaa, 0xab, 0xfa, 0xaa, 0xaa, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x56, 0xaa, 0xaa, 0xa9, 0xaa, 0xaa, 0x6a, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x55, 0xaa, 0xaa, 0xea, 0xaa, 0xa9, 0xaa, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x55, 0x6a, 0xaa, 0xb6, 0xaa, 0xa7, 0xa9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x57, 0xea, 0xaf, 0xff, 0xfa, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0xff, 0xea, 0xaa, 0xaa, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x55, 0x55, 0x55, 0x7f, 0xff, 0xea, 0xbd, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x55, 0x55, 0x55, 0x7f, 0xf0, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x55, 0x55, 0x55, 0x5f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x55, 0x55, 0x55, 0x5f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x57, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x55, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0xaa, 0x50, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55, 0x54, 0x00, 0x00, 0x00, 0x00, 0x05, 0xaa, 0xaa, 0xa5, 0x00, 0x00, 0x59, 0x55, 0x55, 0x55, 0x54, 0x00, 0x00, 0x00, 0x00, 0x5a, 0xaa, 0xaa, 0xa9, 0x40, 0x00, 0x5a, 0x55, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x01, 0xaa, 0xaa, 0xaa, 0xaa, 0x40, 0x00, 0x6a, 0xa5, 0x55, 0x55, 0x70, 0x00, 0x00, 0x00, 0x16, 0xaa, 0xaa, 0xaa, 0xaa, 0x40, 0x00, 0x6a, 0xaa, 0x95, 0x55, 0x70, 0x00, 0x00, 0x01, 0x6a, 0xaa, 0xaa, 0xaa, 0xaa, 0x50, 0x00, 0x6a, 0xaa, 0xaa, 0xa7, 0xc0, 0x00, 0x01, 0x55, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x90, 0x00, 0x6a, 0xaa, 0xaa, 0xa4, 0x00, 0x00, 0x05, 0x5a, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x90, 0x00, 0x6a, 0xaa, 0xaa, 0xac, 0x00, 0x00, 0x55, 0x56, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x90, 0x00, 0x6a, 0xaa, 0xaa, 0xbc, 0x00, 0x01, 0x55, 0x56, 0xaa, 0xaa, 0xab, 0xaa, 0xaa, 0xa4, 0x00, 0x6a, 0xaa, 0xaa, 0xbf, 0x00, 0x05, 0x55, 0x56, 0xaa, 0xaa, 0xae, 0xaa, 0xaa, 0xa4, 0x00, 0x6a, 0xaa, 0xaa, 0xbf, 0x00, 0xf5, 0x55, 0x56, 0xaa, 0xaa, 0xba, 0xaa, 0xaa, 0xa4, 0x00, 0x6a, 0xaa, 0xaa, 0x5f, 0xff, 0xd5, 0x55, 0x56, 0xaa, 0xaa, 0xe9, 0x55, 0x5a, 0xa4, 0x00, 0x6a, 0xaa, 0xaa, 0x5f, 0xff, 0x55, 0x55, 0x56, 0xaa, 0xa9, 0x55, 0x55, 0x55, 0x64, 0x00, 0x6a, 0xaa, 0xaa, 0x57, 0xfd, 0x55, 0x55, 0x56, 0xaa, 0x54, 0x55, 0x55, 0x55, 0x64, 0x00, 0x6a, 0xaa, 0xa9, 0x55, 0xf5, 0x55, 0x55, 0x56, 0xa9, 0x01, 0x55, 0x55, 0x55, 0x54, 0x00, 0x6a, 0xaa, 0xa9, 0x55, 0x55, 0x55, 0x55, 0x56, 0x94, 0x15, 0x55, 0x55, 0x55, 0x50, 0x00, 0x6a, 0xaa, 0x95, 0x55, 0x55, 0x55, 0x55, 0x56, 0x40, 0x15, 0x55, 0x55, 0x55, 0x50, 0x00, 0x6a, 0xa5, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x00, 0x55, 0x55, 0x55, 0x55, 0x40, 0x00, 0x1a, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x54, 0x01, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x39, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x40, 0x01, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x3f, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x00, 0x05, 0x55, 0x55, 0x55, 0x54, 0x00, 0x00, 0x03, 0x55, 0x55, 0x55, 0x55, 0x55, 0x50, 0x00, 0x15, 0x55, 0x55, 0x55, 0x54, 0x00, 0x00, 0x00, 0xfd, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x55, 0x55, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x0f, 0xd5, 0x55, 0x55, 0x50, 0x00, 0x01, 0x55, 0x55, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x55, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x6a, 0xa9, 0x55, 0x55, 0x00, 0x05, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x6a, 0xaa, 0xaa, 0x95, 0x54, 0x00, 0x15, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5a, 0xaa, 0xaa, 0xaa, 0x95, 0x50, 0x00, 0x15, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0xaa, 0xaa, 0xaa, 0xaa, 0x95, 0x40, 0x01, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0xaa, 0xaa, 0xaa, 0xaa, 0x95, 0x00, 0x05, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x05, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x54, 0x00, 0x15, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x15, 0xaa, 0xaa, 0xaa, 0xaa, 0xa5, 0x50, 0x00, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x55, 0x6a, 0xaa, 0xaa, 0xaa, 0x95, 0x00, 0x05, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x01, 0x55, 0x5a, 0xaa, 0xaa, 0xaa, 0x50, 0x00, 0x15, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x01, 0x55, 0x55, 0xaa, 0xaa, 0xff, 0x40, 0x00, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x05, 0x55, 0x55, 0x55, 0x55, 0xff, 0x00, 0x15, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x05, 0x55, 0x55, 0x55, 0x57, 0xfc, 0x03, 0x5a, 0x95, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x57, 0xff, 0xfd, 0xaa, 0xa5, 0x55, 0x55, 0x54, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x55, 0xf5, 0x56, 0xaa, 0xa5, 0x55, 0x55, 0x54, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x55, 0x56, 0xaa, 0xaa, 0xa5, 0x55, 0x55, 0x54, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x55, 0x5a, 0xaa, 0xaa, 0xa5, 0x55, 0x55, 0x54, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x55, 0x6a, 0xaa, 0xaa, 0xa9, 0x55, 0x55, 0x50, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x55, 0xaa, 0xaa, 0xaa, 0xa9, 0x55, 0x55, 0x40, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x56, 0xaa, 0xaa, 0xaa, 0xaa, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x55, 0x5a, 0xaa, 0xaa, 0xaa, 0xaa, 0x55, 0x50, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x55, 0x55, 0x55, 0x5a, 0xaa, 0xaa, 0xaa, 0xaa, 0x95, 0x40, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x55, 0x55, 0x55, 0x6a, 0xaa, 0xaa, 0xaa, 0xa9, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xd5, 0x55, 0x55, 0x6a, 0xaa, 0xaa, 0xaa, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x55, 0x55, 0x5a, 0xaa, 0xaa, 0xaa, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf5, 0x56, 0xaa, 0xaa, 0x95, 0x00, 0x00, 0x00, 0x00 };
